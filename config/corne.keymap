/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        skqr: skqr {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQR";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <800>;
            quick-release;
            ignore-modifiers;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
            layers = <0 2 1>;
            timeout-ms = <50>;
        };

        combo_hyper_left {
            bindings = <&skqr LS(LA(LC(LEFT_GUI)))>;
            key-positions = <27 28>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };

        combo_hyper_right {
            bindings = <&skqr RS(RA(RC(RIGHT_GUI)))>;
            key-positions = <32 31>;
            timeout-ms = <50>;
            layers = <0 2 1>;
        };

        combo_system_layer {
            bindings = <&to 3>;
            key-positions = <40 30>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I          &kp O    &kp P          &kp GRAVE
&kp LEFT_ALT      &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K          &kp L    &kp SEMICOLON  &kp SQT
&skqr LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA      &kp DOT  &kp FSLH       &kp RIGHT_CONTROL
                                &kp LEFT_GUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BACKSPACE
            >;

            label = "Base";
        };

        symbols_layer {
            bindings = <
&trans    &kp CARET        &kp HASH     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AMPERSAND  &kp PIPE      &kp BACKSLASH
&trans    &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT       &kp MINUS  &kp LESS_THAN     &kp GREATER_THAN   &kp DOLLAR     &kp ASTERISK  &kp SLASH
&kp CAPS  &none            &none        &none                 &none                  &none             &none      &none             &none              &none          &none         &trans
                                        &trans                &trans                 &trans            &trans     &trans            &kp DELETE
            >;

            label = "Symbols";
        };

        numpad_layer {
            bindings = <
&trans          &kp EQUAL     &kp SLASH     &kp ASTERISK  &kp MINUS     &kp PLUS        &none   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &none
&trans          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &none   &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none
&kp LEFT_SHIFT  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &none   &none     &none          &none         &none      &trans
                                            &trans        &trans        &trans          &trans  &trans    &kp BACKSPACE
            >;

            label = "Numpad";
        };

        system_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &kp C_PP  &kp C_PREV  &kp C_NEXT  &none  &none  &kp C_VOLUME_UP
&none         &none         &none         &none         &none         &none         &none     &none       &none       &none  &none  &kp C_VOLUME_DOWN
&none         &none         &none         &none         &none         &none         &none     &none       &none       &none  &none  &kp C_MUTE
                                          &none         &to 0         &none         &none     &to 0       &none
            >;

            label = "System";
        };
    };
};
